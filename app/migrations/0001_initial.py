# Generated by Django 3.1.14 on 2022-06-04 16:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254,
                 unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=50)),
                ('true', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=10000)),
                ('percentage', models.PositiveSmallIntegerField(default=0)),
                ('inputDescription', models.TextField(max_length=10000)),
                ('outputDescription', models.TextField(max_length=10000)),
                ('isSolutionVisible', models.BooleanField(default=False)),
                ('answer', models.TextField(blank=True, max_length=10000, null=True)),
                ('assignmentTemplate', models.FileField(null=True, upload_to='assignment_templates',
                 validators=[django.core.validators.FileExtensionValidator(['jar'])])),
                ('solutionFile', models.FileField(null=True, upload_to='assignment_solutions',
                 validators=[django.core.validators.FileExtensionValidator(['jar'])])),
                ('solution', models.TextField(max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('shortTitle', models.CharField(max_length=5, unique=True)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('newusers', models.ManyToManyField(
                    blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=50)),
                ('points', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('hint', models.CharField(blank=True, max_length=255, null=True)),
                ('input', models.TextField(max_length=10000)),
                ('output', models.TextField(max_length=10000)),
                ('memoryLimit', models.PositiveSmallIntegerField()),
                ('timeLimit', models.PositiveSmallIntegerField(default=30)),
                ('isVisible', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='app.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='UserAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('jar', models.FileField(upload_to='', validators=[
                 django.core.validators.FileExtensionValidator(['jar'])])),
                ('percentage', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to='app.assignment')),
                ('newuser', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(default=False)),
                ('memory', models.PositiveSmallIntegerField(null=True)),
                ('time', models.PositiveSmallIntegerField(null=True)),
                ('error', models.TextField(null=True)),
                ('output_label', models.CharField(max_length=200, null=True)),
                ('testcase', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to='app.testcase')),
                ('userassignment', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to='app.userassignment')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('course', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='app.course')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ManyToManyField(to='app.Answer')),
                ('question', models.ManyToManyField(to='app.Question')),
                ('students', models.ManyToManyField(
                    blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=300, null=True)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('questionNum', models.IntegerField(default=0)),
                ('course', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to='app.course')),
                ('students', models.ManyToManyField(
                    blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question', to='app.quiz'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='tags',
            field=models.ManyToManyField(to='app.tag'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='test',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.test'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='app.question'),
        ),
        migrations.AddField(
            model_name='newuser',
            name='courses',
            field=models.ManyToManyField(to='app.course'),
        ),
        migrations.AddField(
            model_name='newuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                         related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='newuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set',
                                         related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
